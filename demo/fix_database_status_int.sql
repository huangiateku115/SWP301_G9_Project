-- =====================================================
-- SCRIPT S·ª¨A DATABASE CHO STATUS INT
-- Ch·∫°y script n√†y trong SQL Server Management Studio
-- =====================================================

USE [UserManagement] -- Thay b·∫±ng t√™n database c·ªßa b·∫°n
GO

PRINT '=== B·∫ÆTƒê·∫¶U S·ª¨A DATABASE SCHEMA ==='

-- 1. S·ª¨A B·∫¢NG pinSlot - ƒê·ªïi pinStatus v√† reserveStatus th√†nh INT
PRINT 'ƒêang s·ª≠a c·ªôt pinStatus trong b·∫£ng pinSlot...'

-- Ki·ªÉm tra n·∫øu c·ªôt v·∫´n l√† VARCHAR
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
           WHERE TABLE_NAME = 'pinSlot' AND COLUMN_NAME = 'pinStatus' 
           AND DATA_TYPE = 'varchar')
BEGIN
    -- Update data tr∆∞·ªõc khi ƒë·ªïi ki·ªÉu
    UPDATE dbo.pinSlot 
    SET pinStatus = CASE 
                        WHEN pinStatus = 'valiable' THEN '1'
                        WHEN pinStatus = 'unvaliable' THEN '0'
                        ELSE '0'
                    END
    WHERE pinStatus IN ('valiable', 'unvaliable')

    -- ƒê·ªïi ki·ªÉu c·ªôt
    ALTER TABLE dbo.pinSlot 
    ALTER COLUMN pinStatus INT NOT NULL

    PRINT 'ƒê√£ ƒë·ªïi pinStatus th√†nh INT (0=unvaliable, 1=valiable)'
END
ELSE
BEGIN
    PRINT 'pinStatus ƒë√£ l√† INT'
END

-- 2. X√ìA C·ªòT reserveStatus v√† reserveTime (n·∫øu t·ªìn t·∫°i)
IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
           WHERE TABLE_NAME = 'pinSlot' AND COLUMN_NAME = 'reserveStatus')
BEGIN
    ALTER TABLE dbo.pinSlot DROP COLUMN reserveStatus
    PRINT 'ƒê√£ x√≥a c·ªôt reserveStatus'
END

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
           WHERE TABLE_NAME = 'pinSlot' AND COLUMN_NAME = 'reserveTime')
BEGIN
    ALTER TABLE dbo.pinSlot DROP COLUMN reserveTime
    PRINT 'ƒê√£ x√≥a c·ªôt reserveTime'
END

-- 3. S·ª¨A B·∫¢NG pinStation - ƒê·ªïi status th√†nh INT  
PRINT 'ƒêang s·ª≠a c·ªôt status trong b·∫£ng pinStation...'

IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
           WHERE TABLE_NAME = 'pinStation' AND COLUMN_NAME = 'status' 
           AND DATA_TYPE = 'varchar')
BEGIN
    -- Update data tr∆∞·ªõc khi ƒë·ªïi ki·ªÉu
    UPDATE dbo.pinStation 
    SET status = CASE 
                     WHEN status = 'active' THEN '1'
                     WHEN status = 'inactive' THEN '0'  
                     WHEN status = 'maintenance' THEN '2'
                     ELSE '1'
                 END
    WHERE status IN ('active', 'inactive', 'maintenance')

    -- ƒê·ªïi ki·ªÉu c·ªôt
    ALTER TABLE dbo.pinStation 
    ALTER COLUMN status INT NOT NULL

    PRINT 'ƒê√£ ƒë·ªïi status th√†nh INT (0=inactive, 1=active, 2=maintenance)'
END
ELSE
BEGIN
    PRINT 'status ƒë√£ l√† INT'
END

-- 4. S·ª¨A STORED PROCEDURE UpdatePinPercent
PRINT 'ƒêang s·ª≠a stored procedure UpdatePinPercent...'

-- Drop procedure c≈©
IF OBJECT_ID('dbo.UpdatePinPercent', 'P') IS NOT NULL
    DROP PROCEDURE dbo.UpdatePinPercent
GO

-- T·∫°o procedure m·ªõi v·ªõi INT
CREATE PROCEDURE dbo.UpdatePinPercent
AS
BEGIN
    SET NOCOUNT ON;
    
    -- TƒÉng pinPercent +1% cho pin ch∆∞a ƒë·∫ßy (pinStatus = 0)
    -- Khi ƒë·∫°t 100% th√¨ ƒë·ªïi th√†nh valiable (pinStatus = 1)
    UPDATE dbo.pinSlot
    SET pinPercent = CASE
                        WHEN pinPercent < 100 THEN pinPercent + 1
                        ELSE 100
                    END,
        pinStatus = CASE
                        WHEN pinPercent + 1 >= 100 THEN 1  -- valiable
                        ELSE 0  -- unvaliable
                    END
    WHERE pinStatus = 0  -- ch·ªâ update pin unvaliable
      AND pinPercent < 100;
    
    DECLARE @RowsAffected INT = @@ROWCOUNT;
    IF @RowsAffected > 0
        PRINT 'UpdatePinPercent - Updated ' + CAST(@RowsAffected AS VARCHAR(10)) + ' slots';
END
GO

-- 5. X√ìA STORED PROCEDURE c≈© kh√¥ng d√πng
IF OBJECT_ID('dbo.ResetExpiredReservations_Test', 'P') IS NOT NULL
BEGIN
    DROP PROCEDURE dbo.ResetExpiredReservations_Test
    PRINT 'ƒê√£ x√≥a stored procedure ResetExpiredReservations_Test'
END

PRINT '=== HO√ÄN TH√ÄNH S·ª¨A DATABASE ==='
PRINT 'C√°c thay ƒë·ªïi:'
PRINT '‚úÖ pinSlot.pinStatus: VARCHAR ‚Üí INT (0=unvaliable, 1=valiable)'
PRINT '‚úÖ pinStation.status: VARCHAR ‚Üí INT (0=inactive, 1=active, 2=maintenance)'  
PRINT '‚úÖ X√≥a pinSlot.reserveStatus v√† reserveTime'
PRINT '‚úÖ S·ª≠a stored procedure UpdatePinPercent cho INT'
PRINT '‚úÖ X√≥a stored procedure ResetExpiredReservations_Test'
PRINT ''
PRINT 'üöÄ RESTART SPRING BOOT APPLICATION ƒê·ªÇ HO√ÄN T·∫§T!'